#!/usr/bin/env bash

#-------------#
# SCRIPT NAME #
#-------------#
declare -r name=${0##*/}
declare -r Version="0.1.0"

#---------------------#
# ENABLE BASH OPTIONS #
#---------------------#
shopt -s extglob nullglob

#---------------#
# SERVICE LISTS #
#---------------#
# make the array start with one
SERVICES[0]=" "
SERVICES+=( /etc/sv/* )

#-----------------#
# COLOR VARIABLES #
#-----------------#
red='\e[1;31m'
grn='\e[1;32m'
blu='\e[1;34m'
cyn='\e[1;36m'
rst='\e[0m'

#--------------------#
# SHOW ERROR MESSAGE #
#--------------------#
die(){
    printf "%s: %b\n" "${name^}" "$@" >&2
    exit 2
}

#-------------------#
# SUPER USER ACCESS #
#-------------------#
SuCheck(){
    [ "$UID" -ne 0 ] && die "Warning: Access Denied"
}

#-----------------#
# SETUP TERMINAL  #
#-----------------#
TerminalSetup(){
    # '\e[?7l'  Disable line wrap
    # '\e[?25l' hide cursor
    # '\e[2J'   clean screen
    # '\e[H'
    printf '\e[?7l\e[?25l\e[2J\e[H'

    # get terminal lines and coluns
    read -r LINES COLUMNS < <(stty size)

    # get max terinal lines
    (( MAX = LINES - 2))
}

#-------------------#
# RESTORE TERMINAL  #
#-------------------#
TerminalRestore(){
    # '\e[?25h' Unhide the cursor
    # '\e[?7h'  Enable line wrap
    # '\e[999B'
    printf '\e[?25h\e[?7h\e[999B'
}

#---------------------#
# DRAW SERVICES LIST  #
#---------------------#
DrawList(){
    local ACTIVE sname
    # move cursor to top left
    tput cup 0 0

    COUNT=$(( ${#SERVICES[@]} - 1 ))
    START=${START:=1}

for (( i=$START; i<=$MAX; i++ )) ; do

    [ "$i" -gt "$COUNT" ] && MAX=$COUNT

    sname="${SERVICES[$i]##*/}"

    [ -e "/var/service/$sname" ] && ACTIVE="${grn}[*]${rst}" || ACTIVE="${red}[-]${rst}"

    printf "%*s\r" "$COLUMNS"

    printf "%.2d: %b %b\n" "$i" "$ACTIVE" "$sname"
done

    printf "%b, %b, %b, %b, %b, %b %b\n" "${grn}[A]${rst}dd" \
                                         "${red}[P]${rst}urge" \
                                         "${blu}[U]${rst}p" \
                                         "${red}[D]${rst}own" \
                                         "${cyn}[R]${rst}estart" \
                                         "${grn}[J/K]${rst}" \
                                         "($START-$MAX/$COUNT)"
}

#----------#
# KEYBINDS #
#----------#
KeyPress(){
case "$1" in
    j )
        if [ "$MAX" -ne "$COUNT" ]; then
            [ "$START" -le "$MAX" ] && ((++START))
            [ "$MAX" -lt "$COUNT" ] && ((++MAX))
        fi
        ;;
    k )
        if [ "$START" -ne 1 ]; then
            if [ "$START" -le "$MAX" ]; then
                [ "$START" -gt 1 ] && ((--START))
            else
                START=$MAX
            fi
            [ "$MAX" -gt 1 ] && ((--MAX))
        fi
        ;;
    u )
        read -rp "Up Services (1 2 3): "
        for i in ${REPLY[@]} ;do
            sv up ${SERVICES[$i]}
        done
        ;;
    d )
        read -rp "Down Services (1 2 3): "
        for i in ${REPLY[@]}; do
            sv down ${SERVICES[$i]}
        done
        ;;
    r )
        read -rp "Restart Services (1 2 3): "
        for i in ${REPLY[@]}; do
            sv restart ${SERVICES[$i]}
        done
        ;;
    a )
        read -rp "Add Services (1 2 3): "
        for i in ${REPLY[@]}; do
            ln -s /etc/sv/${SERVICES[$i]} /var/service
        done
        ;;
    p )
        read -rp "Purge Services (1 2 3): "
        for i in ${REPLY[@]} ;do
            rm -rf /var/service/${SERVICES[$i]}
        done
        ;;
    q )
        TerminalRestore
        exit
        ;;
esac

clear
DrawList
}

#-------------#
# HELP DIALOG #
#-------------#
HelpDialog(){
while read ; do
    printf "%s\n" "$REPLY"
done <<-HELP
${name^}_$Version: Void Linux Servers Manager in Pure Bash
USAGE: $name [OPTIONS]

OPTIONS:
    -h  Show this help dialog
    -v  Shwo Script Vesrion
HELP
exit 0
}

#---------------#
# MAIN FUNCTION #
#---------------#
MainFunc(){
    [ "$1" = "-h" ] && HelpDialog
    [ "$1" = "-v" ] && printf "%s\n" "${name^} Version: ($Version)" >&2

    SuCheck
    TerminalSetup
    DrawList

    trap 'TerminalRestore' EXIT
    trap 'START=1 ;DrawList' SIGWINCH

    for ((;;)); do
        read -rsn1
        KeyPress "$REPLY"
    done
}

#-------------------#
# RUN MAIN FUNCTION #
#-------------------#
MainFunc "$@"
